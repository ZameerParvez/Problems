cmake_minimum_required(VERSION 3.16)

# set the project name and version
project(Algorithms VERSION 1.0)

add_library(algo_compiler_flags INTERFACE)
target_compile_features(algo_compiler_flags INTERFACE cxx_std_17)

set(gcc_like_cxx "$<COMPILE_LANG_AND_ID:CXX,ARMClang,AppleClang,Clang,GNU>")
set(msvc_cxx "$<COMPILE_LANG_AND_ID:CXX,MSVC>")
target_compile_options(algo_compiler_flags INTERFACE
  "$<${gcc_like_cxx}:$<BUILD_INTERFACE:-Wall;-Wextra;-Wshadow;-Wformat=2;-Wunused>>"
  "$<${msvc_cxx}:$<BUILD_INTERFACE:-W3>>"
)

# I don't think that this is needed
include_directories(
  "${PROJECT_SOURCE_DIR}"
)

# configure_file(Algoconfig.h.in Algoconfig.h)

# add the library
# add_subdirectory("library")
# target_link_libraries(Algorithms PUBLIC SOMELIBRARY)

# define a list of source files to compiled, so that they can be linked to the main target as a library
set(SOURCES Sum.cpp)
add_library(algos STATIC ${SOURCES})
target_link_libraries(algos PUBLIC algo_compiler_flags)


add_executable(Algorithms Main.cpp)
target_link_libraries(Algorithms PUBLIC algo_compiler_flags algos)

# add the binary tree to the search path for include files, so Algoconfig.h can be found
target_include_directories(
  Algorithms PUBLIC
  "${PROJECT_BINARY_DIR}" # this is included incase, we decide to use a configuration file which is generated by cmake
)

